[Details]
difficulty_level = high
question_types = problem_solving, algorithm_design, data_structure_implementation, complexity_analysis, theoretical, optimization, scenario_based, coding_skills
llm_guidance = "Prompt the interviewee with questions on algorithm design, complexity, and optimization. Ensure each response is in question form."

[QuestionDistribution]
problem_solving = 20
algorithm_design = 20
data_structure_implementation = 15
complexity_analysis = 15
theoretical = 10
optimization = 10
scenario_based = 5
coding_skills = 5

[Prompt]
intro_prompt = "Begin by asking a detailed question about the interviewee's approach to designing and optimizing algorithms."

[Topics]
problem_solving = "Solving algorithmic challenges, coding puzzles."
algorithm_design = "Designing efficient algorithms, pseudocode, problem breakdown."
data_structure_implementation = "Implementing linked lists, trees, graphs, etc."
complexity_analysis = "Big-O notation, analyzing time and space complexity."
theoretical = "Foundations of algorithms, computability, recursion theory."
optimization = "Improving algorithm efficiency, reducing computational cost."
scenario_based = "Applying algorithms to real-world situations."
coding_skills = "Implementing algorithms in code, debugging."

